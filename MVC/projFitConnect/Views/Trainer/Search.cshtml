@{
}
<div style="padding-top:85px;">
    <link href="~/css/coachsearch.css" rel="stylesheet" />
    <div class="mt-4" style="margin-top:30px;">
        <div class="d-flex float-start" role="search" style="width:30%">
            <input type="search" class="form-control me-2" aria-label="Search" placeholder="找教練" id="inputSearch" />
        </div>
        <form class="d-flex">
            <select class="w-100 mx-3 px-3 rounded-3 form-select" name="city" id="citys">
                <option>縣市</option>
            </select>
            <select class="w-100 mx-3 px-3 rounded-3 form-select" name="city" id="regions">
                <option>地區</option>
            </select>
            <select class="w-100 mx-3 px-3 rounded-3 form-select" name="course" id="sort1Search">
                <option>有氧、無氧</option>
            </select>
            <select class="w-100 mx-3 px-3 rounded-3 form-select" name="course" id="sort2Search">
                <option>訓練需求</option>
            </select>
            <select class="w-100 mx-3 px-3 rounded-3 form-select" name="gender" aria-label="Default select example" id="genderSearch">
                <option value="性別">性別</option>
                <option value="男性">男性</option>
                <option value="女性">女性</option>
                <option value="其他">其他</option>
            </select>
        </form>
    </div>
    <div style="display: flex; justify-content: space-between;">
        <div style="width:50%">
            <h2 class="fw-bold my-4 " id="totalcoaches">共有 -- 位教練</h2>
        </div>
        <form class="d-flex">
            <button type="button" class="w-100 mx-3 my-4 px-3 rounded-3 btn btn-info" id="resetButton" style="width:50px;">重新篩選</button>
        </form>
    </div>
    <div class="d-flex flex-row flex-wrap justify-content-between" id="div">
        教練卡
    </div>
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item">
                <a class="page-link" aria-label="Previous" onclick="pagingHandler('prev')">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <nav>
                <ul class="pagination" id="ulpage">
                </ul>
            </nav>
            <li>
                <a class="page-link" aria-label="Next" onclick="pagingHandler('next')">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        const div = document.getElementById("div");//教練卡
        const rateData = document.getElementById("rateData");//評分資料
        const totalcoaches = document.getElementById("totalcoaches");
        const inpSearch = document.querySelector('#inputSearch');//依關鍵字搜尋
        const sort1Search = document.querySelector('#sort1Search');//依課程分類搜尋sort1
        const sort2Search = document.querySelector('#sort2Search');//依課程分類搜尋sort2
        const genderSearch = document.querySelector('#genderSearch');//依性別搜尋
        const citys = document.querySelector('#citys');//依縣市搜尋
        const regions = document.querySelector('#regions');//依地區搜尋
        const ulPaging = document.querySelector('#ulpage');//分頁
        const resetButton = document.querySelector('#resetButton');//重設
        const searchData =
        {
            "sort1": "",
            "sort2": "",
            "gender": "",
            "city": "",
            "region": "",
            "classId": 0,
            "keyword": "",
            "page": 1,
            "pageSize": 10,
            "sortBy": "",
            "sortType": "asc"
        };
        //重設
        resetButton.addEventListener('click', () => {
            // 重設表單數據
            searchData.sort1 = "";
            searchData.sort2 = "";
            searchData.gender = "";
            searchData.city = "";
            searchData.region = "";
            searchData.keyword = "";
            searchData.page = 1;
            citys.value = "縣市";
            regions.value = "請選擇地區";
            genderSearch.value = "性別";
            sort1Search.value = "有氧/無氧";
            sort2Search.value = "課程種類";
            inpSearch.value = "";
            loadCoaches();
        });

        

        //載入頁面資訊function
        const loadCoaches = async () => {
            const url = 'https://localhost:7199/api/Coach/SEARCH';
            const response = await fetch(url, {
                method: 'POST',
                body: JSON.stringify(searchData),
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            data = await response.json();
            let str = '';
            let exps = '';
            let regs = '';
            //教練卡片生成
            const card = data.coachResult.map(item => {
                //專長(不重複)
                const uniqueExp = {};
                const exps = item.experties.map(exp => {
                    const key = `${exp.className}-${exp.classSort1}-${exp.classSort2}`;
                    if (!uniqueExp[key]) {
                        uniqueExp[key] = true;
                        return `#${exp.className} #${exp.classSort1} #${exp.classSort2}`;
                    }
                    return null;
                }).filter(exp => exp !== null).join(`<br>`);
                console.log(exps);
                //開課地區(不重複)
                const uniqueReg = {};
                const regs = item.region.map(reg => {
                    const keyReg = `${reg.city}-${reg.region}`;
                    if (!uniqueReg[keyReg]) {
                        uniqueReg[keyReg] = true;
                        return `${reg.city}_${reg.region}`;
                    }
                    return null;
                }).filter(reg => reg !== null).join(`<br>`);
                console.log(regs);
                //教練評分
                const coachRates = item.coachRate.map(rate => parseFloat(rate.rateCoach));
                const sum = coachRates.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
                const averageRate = coachRates.length > 0 ? sum / coachRates.length : "尚無評價";
                // coachRates = item.coachRate.map(rate => {
                //     return `${rate.rateCoach}`
                // })
                // let sum = parseFloat('0')
                // for (let i = 0; i < coachRates.length; i++) {
                //     sum += parseFloat(coachRates[i])
                // }
                // let averageRate;
                // if (coachRates.length > 0) {
                //     averageRate = sum / coachRates.length;
                //     console.log(averageRate);
                // } else {
                //     averageRate = "尚無評價";
                // }
                //生成教練卡
                return( `<a href="/Trainer/Coach?id=${item.id}" class="card mb-3" style="max-width: 540px; text-decoration: none;">
                                <div class="row g-0">
                                <div class="col-md-4 d-flex align-items-center justify-content-center" style="overflow: hidden;">
                                    <img src="data:image/jpeg;base64,${item.photo}" id="image" class="img-fluid rounded-start" alt="..." style="object-fit: cover; height: 100%; width: auto;">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h4 class="card-title">${item.name}</h4>
                                        <h6 class="card-text"><img src="/assets/img/star1.png">${averageRate}</h6>
                                        <p class="card-text">${regs}</p>
                                        <p class="card-text">${item.intro}</p>
                                        <p class="card-text">${exps}</p>
                                    </div>
                                </div>
                                </div>
                        </a>`)
            })
            // const imageUrl = `data:image/jpeg;base64,${data[0].photo}`;
            // document.getElementById('image').src = imageUrl;
            div.innerHTML = card.join("");
            totalcoaches.textContent = `共有${data.totalCount}位教練`;

            //顯示分頁按鈕
            let liPages = "";
            for (let i = 1, max = data.totalPages; i <= max; i++) {
                liPages += `<li class="page-item" onclick="pagingHandler(${i})"><a class="page-link" href="#">${i}</a></li>`
            }
            ulPaging.innerHTML = liPages;
        };

        //載入sort1選項function
        const loadSort1 = async () => {
            const url = 'https://localhost:7199/api/ClassSort1'; // 獲取分類的 API
            const response = await fetch(url);
            if (!response.ok) {
                return;
            }
            const sort1 = await response.json();
            sort1Search.innerHTML = "";
            // 添加一個預設選項
            const defaultOption = document.createElement('option');
            defaultOption.text = '有氧/無氧';
            sort1Search.appendChild(defaultOption);

            // 動態生成選項
            sort1.forEach(course => {
                var option = document.createElement('option');
                option.text = course.classSort1Detail;
                sort1Search.appendChild(option);
            });
        };

        //載入sort2選項function
        const loadSort2 = async () => {
            const url = 'https://localhost:7199/api/ClassSort2'; // 獲取分類的 API
            const response = await fetch(url);
            if (!response.ok) {
                return;
            }
            const sort2 = await response.json();
            sort2Search.innerHTML = "";
            // 添加一個預設選項
            const defaultOption = document.createElement('option');
            defaultOption.text = '課程種類';
            sort2Search.appendChild(defaultOption);
            // 動態生成選項
            sort2.forEach(course => {
                var option = document.createElement('option');
                option.text = course.classSort2Detail;
                sort2Search.appendChild(option);
            });
        };

        //載入場館選項function
        // 載入縣市
        async function loadCitiesWithGyms() {
            const citySelect = document.getElementById('citys');
            try {
                const response = await fetch("https://localhost:7199/api/Region");
                allData = await response.json();
                const uniqueCities = new Set();
                // 過濾出至少有一個場館的城市
                allData.forEach(item => {
                    if (!uniqueCities.has(item.city) && item.gymId !== 0) {
                        uniqueCities.add(item.city);
                        const option = document.createElement('option');
                        option.value = item.city;
                        option.textContent = item.city;
                        citySelect.appendChild(option);
                    }
                });
            } catch (error) {
                console.error("Error fetching data:", error);
            }
        }
        // 載入地區
        async function loadRegions() {
            const selectedCity = citys.value;

            let regionOptions = '<option>請選擇地區</option>';
            const filteredRegions = allData.filter(item => item.city === selectedCity && item.gymId !== 0);
            filteredRegions.forEach(item => {
                regionOptions += `<option value="${item.region}">${item.region}</option>`;
            });

            regions.innerHTML = regionOptions;
        }
        //載入有場館的縣市
        document.addEventListener('DOMContentLoaded', () => {
            loadCitiesWithGyms();
            loadRegions();
        });
        // 事件監聽器，當城市選項發生變化時更新地區選項
        citys.addEventListener('change', event => {
            searchData.page = 1;
            if (event.target.value === '縣市') {
                searchData.city = "";
                searchData.region = "";
            } else {
                searchData.city = event.target.value;
            }
            loadRegions();
            loadCoaches();
        });
        // 事件監聽器，當地區選項發生變化時過濾場館
        regions.addEventListener('change', event => {
            searchData.page = 1;
            if (event.target.value === '地區') {
                searchData.city = "";
                searchData.region = "";
            } else {
                searchData.region = event.target.value;
                regions.value = event.target.value;
            }
            console.log('choose', searchData.region);
            event.target.textContent = searchData.region;
            loadRegions();
            loadCoaches();
        });
        loadCoaches();
        loadSort1();
        loadSort2();

        //關鍵字搜尋事件
        inpSearch.addEventListener('keydown', event => {
            searchData.page = 1;
            if (event.keyCode === 13) {
                searchData.keyword = event.target.value;
                loadCoaches();
            }
        })
        //分頁選擇事件
        const pagingHandler = page => {
            if (page === 'next') {
                if (searchData.page < data.totalPages) searchData.page++;
            } else if (page === 'prev') {
                searchData.page--;
            } else {
                searchData.page = page;
            }
            loadCoaches();
            // 滾動到頁面最上方
            //window.scrollTo(0, 0);
        }
        //依有氧、無氧分類搜尋事件sort1
        sort1Search.addEventListener('change', event => {
            searchData.page = 1;
            if (event.target.value === '有氧/無氧') {
                searchData.sort1 = "";
            } else {
                searchData.sort1 = event.target.value;
            }
            loadCoaches();
        });
        //依課程分類搜尋事件sort2
        sort2Search.addEventListener('change', event => {
            searchData.page = 1;
            if (event.target.value === '課程種類') {
                searchData.sort2 = "";
            } else {
                searchData.sort2 = event.target.value;
            }
            loadCoaches();
        });
        //依性別搜尋
        genderSearch.addEventListener('change', event => {
            searchData.page = 1;
            if (event.target.value === '性別') {
                searchData.gender = "";
            } else {
                searchData.gender = event.target.value;
            }
            loadCoaches();
        });

    </script>
}
@section Styles {
<style>
        /*滑鼠覆蓋卡片效果*/
        .card {
            transition: transform 0.3s ease;
            cursor: pointer;
        }
            .card:hover {
                transform: scale(1.03);
            }
</style>
}